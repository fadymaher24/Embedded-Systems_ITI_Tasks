
SS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000872  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000872  000008e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000009fc  00000000  00000000  000008f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000009d7  00000000  00000000  000012ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e7       	ldi	r30, 0x72	; 114
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 25 04 	call	0x84a	; 0x84a <main>
  7a:	0c 94 37 04 	jmp	0x86e	; 0x86e <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_voidSetPinDirection>:




void DIO_voidSetPinDirection(u8 copy_u8port, u8 copy_u8pin, u8 copy_u8Direction)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	27 97       	sbiw	r28, 0x07	; 7
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
  96:	89 83       	std	Y+1, r24	; 0x01
  98:	6a 83       	std	Y+2, r22	; 0x02
  9a:	4b 83       	std	Y+3, r20	; 0x03
	if(copy_u8Direction == 1)             
  9c:	8b 81       	ldd	r24, Y+3	; 0x03
  9e:	81 30       	cpi	r24, 0x01	; 1
  a0:	09 f0       	breq	.+2      	; 0xa4 <DIO_voidSetPinDirection+0x22>
  a2:	6f c0       	rjmp	.+222    	; 0x182 <DIO_voidSetPinDirection+0x100>
	{
		switch(copy_u8port)
  a4:	89 81       	ldd	r24, Y+1	; 0x01
  a6:	28 2f       	mov	r18, r24
  a8:	30 e0       	ldi	r19, 0x00	; 0
  aa:	3f 83       	std	Y+7, r19	; 0x07
  ac:	2e 83       	std	Y+6, r18	; 0x06
  ae:	8e 81       	ldd	r24, Y+6	; 0x06
  b0:	9f 81       	ldd	r25, Y+7	; 0x07
  b2:	81 30       	cpi	r24, 0x01	; 1
  b4:	91 05       	cpc	r25, r1
  b6:	49 f1       	breq	.+82     	; 0x10a <DIO_voidSetPinDirection+0x88>
  b8:	2e 81       	ldd	r18, Y+6	; 0x06
  ba:	3f 81       	ldd	r19, Y+7	; 0x07
  bc:	22 30       	cpi	r18, 0x02	; 2
  be:	31 05       	cpc	r19, r1
  c0:	2c f4       	brge	.+10     	; 0xcc <DIO_voidSetPinDirection+0x4a>
  c2:	8e 81       	ldd	r24, Y+6	; 0x06
  c4:	9f 81       	ldd	r25, Y+7	; 0x07
  c6:	00 97       	sbiw	r24, 0x00	; 0
  c8:	61 f0       	breq	.+24     	; 0xe2 <DIO_voidSetPinDirection+0x60>
  ca:	d2 c0       	rjmp	.+420    	; 0x270 <DIO_voidSetPinDirection+0x1ee>
  cc:	2e 81       	ldd	r18, Y+6	; 0x06
  ce:	3f 81       	ldd	r19, Y+7	; 0x07
  d0:	22 30       	cpi	r18, 0x02	; 2
  d2:	31 05       	cpc	r19, r1
  d4:	71 f1       	breq	.+92     	; 0x132 <DIO_voidSetPinDirection+0xb0>
  d6:	8e 81       	ldd	r24, Y+6	; 0x06
  d8:	9f 81       	ldd	r25, Y+7	; 0x07
  da:	83 30       	cpi	r24, 0x03	; 3
  dc:	91 05       	cpc	r25, r1
  de:	e9 f1       	breq	.+122    	; 0x15a <DIO_voidSetPinDirection+0xd8>
  e0:	c7 c0       	rjmp	.+398    	; 0x270 <DIO_voidSetPinDirection+0x1ee>
		{
			case 0 : SET_BIT(DDRA,copy_u8pin); break;    
  e2:	aa e3       	ldi	r26, 0x3A	; 58
  e4:	b0 e0       	ldi	r27, 0x00	; 0
  e6:	ea e3       	ldi	r30, 0x3A	; 58
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	48 2f       	mov	r20, r24
  ee:	8a 81       	ldd	r24, Y+2	; 0x02
  f0:	28 2f       	mov	r18, r24
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 2e       	mov	r0, r18
  fa:	02 c0       	rjmp	.+4      	; 0x100 <DIO_voidSetPinDirection+0x7e>
  fc:	88 0f       	add	r24, r24
  fe:	99 1f       	adc	r25, r25
 100:	0a 94       	dec	r0
 102:	e2 f7       	brpl	.-8      	; 0xfc <DIO_voidSetPinDirection+0x7a>
 104:	84 2b       	or	r24, r20
 106:	8c 93       	st	X, r24
 108:	b3 c0       	rjmp	.+358    	; 0x270 <DIO_voidSetPinDirection+0x1ee>
			case 1 : SET_BIT(DDRB,copy_u8pin); break; 
 10a:	a7 e3       	ldi	r26, 0x37	; 55
 10c:	b0 e0       	ldi	r27, 0x00	; 0
 10e:	e7 e3       	ldi	r30, 0x37	; 55
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	48 2f       	mov	r20, r24
 116:	8a 81       	ldd	r24, Y+2	; 0x02
 118:	28 2f       	mov	r18, r24
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	02 2e       	mov	r0, r18
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_voidSetPinDirection+0xa6>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	0a 94       	dec	r0
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_voidSetPinDirection+0xa2>
 12c:	84 2b       	or	r24, r20
 12e:	8c 93       	st	X, r24
 130:	9f c0       	rjmp	.+318    	; 0x270 <DIO_voidSetPinDirection+0x1ee>
			case 2 : SET_BIT(DDRC,copy_u8pin); break; 
 132:	a4 e3       	ldi	r26, 0x34	; 52
 134:	b0 e0       	ldi	r27, 0x00	; 0
 136:	e4 e3       	ldi	r30, 0x34	; 52
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	48 2f       	mov	r20, r24
 13e:	8a 81       	ldd	r24, Y+2	; 0x02
 140:	28 2f       	mov	r18, r24
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	02 2e       	mov	r0, r18
 14a:	02 c0       	rjmp	.+4      	; 0x150 <DIO_voidSetPinDirection+0xce>
 14c:	88 0f       	add	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	0a 94       	dec	r0
 152:	e2 f7       	brpl	.-8      	; 0x14c <DIO_voidSetPinDirection+0xca>
 154:	84 2b       	or	r24, r20
 156:	8c 93       	st	X, r24
 158:	8b c0       	rjmp	.+278    	; 0x270 <DIO_voidSetPinDirection+0x1ee>
			case 3 : SET_BIT(DDRD,copy_u8pin); break; 
 15a:	a1 e3       	ldi	r26, 0x31	; 49
 15c:	b0 e0       	ldi	r27, 0x00	; 0
 15e:	e1 e3       	ldi	r30, 0x31	; 49
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	80 81       	ld	r24, Z
 164:	48 2f       	mov	r20, r24
 166:	8a 81       	ldd	r24, Y+2	; 0x02
 168:	28 2f       	mov	r18, r24
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	02 2e       	mov	r0, r18
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_voidSetPinDirection+0xf6>
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	0a 94       	dec	r0
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_voidSetPinDirection+0xf2>
 17c:	84 2b       	or	r24, r20
 17e:	8c 93       	st	X, r24
 180:	77 c0       	rjmp	.+238    	; 0x270 <DIO_voidSetPinDirection+0x1ee>
		}
		
	}
	else if(copy_u8Direction == 0)   
 182:	8b 81       	ldd	r24, Y+3	; 0x03
 184:	88 23       	and	r24, r24
 186:	09 f0       	breq	.+2      	; 0x18a <DIO_voidSetPinDirection+0x108>
 188:	73 c0       	rjmp	.+230    	; 0x270 <DIO_voidSetPinDirection+0x1ee>
	{
		switch(copy_u8port)
 18a:	89 81       	ldd	r24, Y+1	; 0x01
 18c:	28 2f       	mov	r18, r24
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	3d 83       	std	Y+5, r19	; 0x05
 192:	2c 83       	std	Y+4, r18	; 0x04
 194:	8c 81       	ldd	r24, Y+4	; 0x04
 196:	9d 81       	ldd	r25, Y+5	; 0x05
 198:	81 30       	cpi	r24, 0x01	; 1
 19a:	91 05       	cpc	r25, r1
 19c:	59 f1       	breq	.+86     	; 0x1f4 <DIO_voidSetPinDirection+0x172>
 19e:	2c 81       	ldd	r18, Y+4	; 0x04
 1a0:	3d 81       	ldd	r19, Y+5	; 0x05
 1a2:	22 30       	cpi	r18, 0x02	; 2
 1a4:	31 05       	cpc	r19, r1
 1a6:	2c f4       	brge	.+10     	; 0x1b2 <DIO_voidSetPinDirection+0x130>
 1a8:	8c 81       	ldd	r24, Y+4	; 0x04
 1aa:	9d 81       	ldd	r25, Y+5	; 0x05
 1ac:	00 97       	sbiw	r24, 0x00	; 0
 1ae:	69 f0       	breq	.+26     	; 0x1ca <DIO_voidSetPinDirection+0x148>
 1b0:	5f c0       	rjmp	.+190    	; 0x270 <DIO_voidSetPinDirection+0x1ee>
 1b2:	2c 81       	ldd	r18, Y+4	; 0x04
 1b4:	3d 81       	ldd	r19, Y+5	; 0x05
 1b6:	22 30       	cpi	r18, 0x02	; 2
 1b8:	31 05       	cpc	r19, r1
 1ba:	89 f1       	breq	.+98     	; 0x21e <DIO_voidSetPinDirection+0x19c>
 1bc:	8c 81       	ldd	r24, Y+4	; 0x04
 1be:	9d 81       	ldd	r25, Y+5	; 0x05
 1c0:	83 30       	cpi	r24, 0x03	; 3
 1c2:	91 05       	cpc	r25, r1
 1c4:	09 f4       	brne	.+2      	; 0x1c8 <DIO_voidSetPinDirection+0x146>
 1c6:	40 c0       	rjmp	.+128    	; 0x248 <DIO_voidSetPinDirection+0x1c6>
 1c8:	53 c0       	rjmp	.+166    	; 0x270 <DIO_voidSetPinDirection+0x1ee>
		{
			case 0 : CLR_BIT(DDRA,copy_u8pin); break; 
 1ca:	aa e3       	ldi	r26, 0x3A	; 58
 1cc:	b0 e0       	ldi	r27, 0x00	; 0
 1ce:	ea e3       	ldi	r30, 0x3A	; 58
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	80 81       	ld	r24, Z
 1d4:	48 2f       	mov	r20, r24
 1d6:	8a 81       	ldd	r24, Y+2	; 0x02
 1d8:	28 2f       	mov	r18, r24
 1da:	30 e0       	ldi	r19, 0x00	; 0
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	02 2e       	mov	r0, r18
 1e2:	02 c0       	rjmp	.+4      	; 0x1e8 <DIO_voidSetPinDirection+0x166>
 1e4:	88 0f       	add	r24, r24
 1e6:	99 1f       	adc	r25, r25
 1e8:	0a 94       	dec	r0
 1ea:	e2 f7       	brpl	.-8      	; 0x1e4 <DIO_voidSetPinDirection+0x162>
 1ec:	80 95       	com	r24
 1ee:	84 23       	and	r24, r20
 1f0:	8c 93       	st	X, r24
 1f2:	3e c0       	rjmp	.+124    	; 0x270 <DIO_voidSetPinDirection+0x1ee>
			case 1 : CLR_BIT(DDRB,copy_u8pin); break; 
 1f4:	a7 e3       	ldi	r26, 0x37	; 55
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	e7 e3       	ldi	r30, 0x37	; 55
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	48 2f       	mov	r20, r24
 200:	8a 81       	ldd	r24, Y+2	; 0x02
 202:	28 2f       	mov	r18, r24
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 2e       	mov	r0, r18
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_voidSetPinDirection+0x190>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	0a 94       	dec	r0
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_voidSetPinDirection+0x18c>
 216:	80 95       	com	r24
 218:	84 23       	and	r24, r20
 21a:	8c 93       	st	X, r24
 21c:	29 c0       	rjmp	.+82     	; 0x270 <DIO_voidSetPinDirection+0x1ee>
			case 2 : CLR_BIT(DDRC,copy_u8pin); break; 
 21e:	a4 e3       	ldi	r26, 0x34	; 52
 220:	b0 e0       	ldi	r27, 0x00	; 0
 222:	e4 e3       	ldi	r30, 0x34	; 52
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	80 81       	ld	r24, Z
 228:	48 2f       	mov	r20, r24
 22a:	8a 81       	ldd	r24, Y+2	; 0x02
 22c:	28 2f       	mov	r18, r24
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 2e       	mov	r0, r18
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_voidSetPinDirection+0x1ba>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	0a 94       	dec	r0
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_voidSetPinDirection+0x1b6>
 240:	80 95       	com	r24
 242:	84 23       	and	r24, r20
 244:	8c 93       	st	X, r24
 246:	14 c0       	rjmp	.+40     	; 0x270 <DIO_voidSetPinDirection+0x1ee>
			case 3 : CLR_BIT(DDRD,copy_u8pin); break; 
 248:	a1 e3       	ldi	r26, 0x31	; 49
 24a:	b0 e0       	ldi	r27, 0x00	; 0
 24c:	e1 e3       	ldi	r30, 0x31	; 49
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	80 81       	ld	r24, Z
 252:	48 2f       	mov	r20, r24
 254:	8a 81       	ldd	r24, Y+2	; 0x02
 256:	28 2f       	mov	r18, r24
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	02 2e       	mov	r0, r18
 260:	02 c0       	rjmp	.+4      	; 0x266 <DIO_voidSetPinDirection+0x1e4>
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	0a 94       	dec	r0
 268:	e2 f7       	brpl	.-8      	; 0x262 <DIO_voidSetPinDirection+0x1e0>
 26a:	80 95       	com	r24
 26c:	84 23       	and	r24, r20
 26e:	8c 93       	st	X, r24
		}
	}
}
 270:	27 96       	adiw	r28, 0x07	; 7
 272:	0f b6       	in	r0, 0x3f	; 63
 274:	f8 94       	cli
 276:	de bf       	out	0x3e, r29	; 62
 278:	0f be       	out	0x3f, r0	; 63
 27a:	cd bf       	out	0x3d, r28	; 61
 27c:	cf 91       	pop	r28
 27e:	df 91       	pop	r29
 280:	08 95       	ret

00000282 <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(u8 copy_u8port, u8 copy_u8pin, u8 copy_u8Value)
{
 282:	df 93       	push	r29
 284:	cf 93       	push	r28
 286:	cd b7       	in	r28, 0x3d	; 61
 288:	de b7       	in	r29, 0x3e	; 62
 28a:	27 97       	sbiw	r28, 0x07	; 7
 28c:	0f b6       	in	r0, 0x3f	; 63
 28e:	f8 94       	cli
 290:	de bf       	out	0x3e, r29	; 62
 292:	0f be       	out	0x3f, r0	; 63
 294:	cd bf       	out	0x3d, r28	; 61
 296:	89 83       	std	Y+1, r24	; 0x01
 298:	6a 83       	std	Y+2, r22	; 0x02
 29a:	4b 83       	std	Y+3, r20	; 0x03
	if(copy_u8Value == 1)           
 29c:	8b 81       	ldd	r24, Y+3	; 0x03
 29e:	81 30       	cpi	r24, 0x01	; 1
 2a0:	09 f0       	breq	.+2      	; 0x2a4 <DIO_voidSetPinValue+0x22>
 2a2:	6f c0       	rjmp	.+222    	; 0x382 <DIO_voidSetPinValue+0x100>
	{
		switch(copy_u8port)
 2a4:	89 81       	ldd	r24, Y+1	; 0x01
 2a6:	28 2f       	mov	r18, r24
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	3f 83       	std	Y+7, r19	; 0x07
 2ac:	2e 83       	std	Y+6, r18	; 0x06
 2ae:	8e 81       	ldd	r24, Y+6	; 0x06
 2b0:	9f 81       	ldd	r25, Y+7	; 0x07
 2b2:	81 30       	cpi	r24, 0x01	; 1
 2b4:	91 05       	cpc	r25, r1
 2b6:	49 f1       	breq	.+82     	; 0x30a <DIO_voidSetPinValue+0x88>
 2b8:	2e 81       	ldd	r18, Y+6	; 0x06
 2ba:	3f 81       	ldd	r19, Y+7	; 0x07
 2bc:	22 30       	cpi	r18, 0x02	; 2
 2be:	31 05       	cpc	r19, r1
 2c0:	2c f4       	brge	.+10     	; 0x2cc <DIO_voidSetPinValue+0x4a>
 2c2:	8e 81       	ldd	r24, Y+6	; 0x06
 2c4:	9f 81       	ldd	r25, Y+7	; 0x07
 2c6:	00 97       	sbiw	r24, 0x00	; 0
 2c8:	61 f0       	breq	.+24     	; 0x2e2 <DIO_voidSetPinValue+0x60>
 2ca:	d2 c0       	rjmp	.+420    	; 0x470 <DIO_voidSetPinValue+0x1ee>
 2cc:	2e 81       	ldd	r18, Y+6	; 0x06
 2ce:	3f 81       	ldd	r19, Y+7	; 0x07
 2d0:	22 30       	cpi	r18, 0x02	; 2
 2d2:	31 05       	cpc	r19, r1
 2d4:	71 f1       	breq	.+92     	; 0x332 <DIO_voidSetPinValue+0xb0>
 2d6:	8e 81       	ldd	r24, Y+6	; 0x06
 2d8:	9f 81       	ldd	r25, Y+7	; 0x07
 2da:	83 30       	cpi	r24, 0x03	; 3
 2dc:	91 05       	cpc	r25, r1
 2de:	e9 f1       	breq	.+122    	; 0x35a <DIO_voidSetPinValue+0xd8>
 2e0:	c7 c0       	rjmp	.+398    	; 0x470 <DIO_voidSetPinValue+0x1ee>
		{
			case 0 : SET_BIT(PORTA,copy_u8pin); break; 
 2e2:	ab e3       	ldi	r26, 0x3B	; 59
 2e4:	b0 e0       	ldi	r27, 0x00	; 0
 2e6:	eb e3       	ldi	r30, 0x3B	; 59
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	80 81       	ld	r24, Z
 2ec:	48 2f       	mov	r20, r24
 2ee:	8a 81       	ldd	r24, Y+2	; 0x02
 2f0:	28 2f       	mov	r18, r24
 2f2:	30 e0       	ldi	r19, 0x00	; 0
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	02 2e       	mov	r0, r18
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <DIO_voidSetPinValue+0x7e>
 2fc:	88 0f       	add	r24, r24
 2fe:	99 1f       	adc	r25, r25
 300:	0a 94       	dec	r0
 302:	e2 f7       	brpl	.-8      	; 0x2fc <DIO_voidSetPinValue+0x7a>
 304:	84 2b       	or	r24, r20
 306:	8c 93       	st	X, r24
 308:	b3 c0       	rjmp	.+358    	; 0x470 <DIO_voidSetPinValue+0x1ee>
			case 1 : SET_BIT(PORTB,copy_u8pin); break; 
 30a:	a8 e3       	ldi	r26, 0x38	; 56
 30c:	b0 e0       	ldi	r27, 0x00	; 0
 30e:	e8 e3       	ldi	r30, 0x38	; 56
 310:	f0 e0       	ldi	r31, 0x00	; 0
 312:	80 81       	ld	r24, Z
 314:	48 2f       	mov	r20, r24
 316:	8a 81       	ldd	r24, Y+2	; 0x02
 318:	28 2f       	mov	r18, r24
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	02 2e       	mov	r0, r18
 322:	02 c0       	rjmp	.+4      	; 0x328 <DIO_voidSetPinValue+0xa6>
 324:	88 0f       	add	r24, r24
 326:	99 1f       	adc	r25, r25
 328:	0a 94       	dec	r0
 32a:	e2 f7       	brpl	.-8      	; 0x324 <DIO_voidSetPinValue+0xa2>
 32c:	84 2b       	or	r24, r20
 32e:	8c 93       	st	X, r24
 330:	9f c0       	rjmp	.+318    	; 0x470 <DIO_voidSetPinValue+0x1ee>
			case 2 : SET_BIT(PORTC,copy_u8pin); break; 
 332:	a5 e3       	ldi	r26, 0x35	; 53
 334:	b0 e0       	ldi	r27, 0x00	; 0
 336:	e5 e3       	ldi	r30, 0x35	; 53
 338:	f0 e0       	ldi	r31, 0x00	; 0
 33a:	80 81       	ld	r24, Z
 33c:	48 2f       	mov	r20, r24
 33e:	8a 81       	ldd	r24, Y+2	; 0x02
 340:	28 2f       	mov	r18, r24
 342:	30 e0       	ldi	r19, 0x00	; 0
 344:	81 e0       	ldi	r24, 0x01	; 1
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	02 2e       	mov	r0, r18
 34a:	02 c0       	rjmp	.+4      	; 0x350 <DIO_voidSetPinValue+0xce>
 34c:	88 0f       	add	r24, r24
 34e:	99 1f       	adc	r25, r25
 350:	0a 94       	dec	r0
 352:	e2 f7       	brpl	.-8      	; 0x34c <DIO_voidSetPinValue+0xca>
 354:	84 2b       	or	r24, r20
 356:	8c 93       	st	X, r24
 358:	8b c0       	rjmp	.+278    	; 0x470 <DIO_voidSetPinValue+0x1ee>
			case 3 : SET_BIT(PORTD,copy_u8pin); break; 
 35a:	a2 e3       	ldi	r26, 0x32	; 50
 35c:	b0 e0       	ldi	r27, 0x00	; 0
 35e:	e2 e3       	ldi	r30, 0x32	; 50
 360:	f0 e0       	ldi	r31, 0x00	; 0
 362:	80 81       	ld	r24, Z
 364:	48 2f       	mov	r20, r24
 366:	8a 81       	ldd	r24, Y+2	; 0x02
 368:	28 2f       	mov	r18, r24
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	02 2e       	mov	r0, r18
 372:	02 c0       	rjmp	.+4      	; 0x378 <DIO_voidSetPinValue+0xf6>
 374:	88 0f       	add	r24, r24
 376:	99 1f       	adc	r25, r25
 378:	0a 94       	dec	r0
 37a:	e2 f7       	brpl	.-8      	; 0x374 <DIO_voidSetPinValue+0xf2>
 37c:	84 2b       	or	r24, r20
 37e:	8c 93       	st	X, r24
 380:	77 c0       	rjmp	.+238    	; 0x470 <DIO_voidSetPinValue+0x1ee>
		}
		
	}
	else if(copy_u8Value == 0)
 382:	8b 81       	ldd	r24, Y+3	; 0x03
 384:	88 23       	and	r24, r24
 386:	09 f0       	breq	.+2      	; 0x38a <DIO_voidSetPinValue+0x108>
 388:	73 c0       	rjmp	.+230    	; 0x470 <DIO_voidSetPinValue+0x1ee>
	{
		switch(copy_u8port)
 38a:	89 81       	ldd	r24, Y+1	; 0x01
 38c:	28 2f       	mov	r18, r24
 38e:	30 e0       	ldi	r19, 0x00	; 0
 390:	3d 83       	std	Y+5, r19	; 0x05
 392:	2c 83       	std	Y+4, r18	; 0x04
 394:	8c 81       	ldd	r24, Y+4	; 0x04
 396:	9d 81       	ldd	r25, Y+5	; 0x05
 398:	81 30       	cpi	r24, 0x01	; 1
 39a:	91 05       	cpc	r25, r1
 39c:	59 f1       	breq	.+86     	; 0x3f4 <DIO_voidSetPinValue+0x172>
 39e:	2c 81       	ldd	r18, Y+4	; 0x04
 3a0:	3d 81       	ldd	r19, Y+5	; 0x05
 3a2:	22 30       	cpi	r18, 0x02	; 2
 3a4:	31 05       	cpc	r19, r1
 3a6:	2c f4       	brge	.+10     	; 0x3b2 <DIO_voidSetPinValue+0x130>
 3a8:	8c 81       	ldd	r24, Y+4	; 0x04
 3aa:	9d 81       	ldd	r25, Y+5	; 0x05
 3ac:	00 97       	sbiw	r24, 0x00	; 0
 3ae:	69 f0       	breq	.+26     	; 0x3ca <DIO_voidSetPinValue+0x148>
 3b0:	5f c0       	rjmp	.+190    	; 0x470 <DIO_voidSetPinValue+0x1ee>
 3b2:	2c 81       	ldd	r18, Y+4	; 0x04
 3b4:	3d 81       	ldd	r19, Y+5	; 0x05
 3b6:	22 30       	cpi	r18, 0x02	; 2
 3b8:	31 05       	cpc	r19, r1
 3ba:	89 f1       	breq	.+98     	; 0x41e <DIO_voidSetPinValue+0x19c>
 3bc:	8c 81       	ldd	r24, Y+4	; 0x04
 3be:	9d 81       	ldd	r25, Y+5	; 0x05
 3c0:	83 30       	cpi	r24, 0x03	; 3
 3c2:	91 05       	cpc	r25, r1
 3c4:	09 f4       	brne	.+2      	; 0x3c8 <DIO_voidSetPinValue+0x146>
 3c6:	40 c0       	rjmp	.+128    	; 0x448 <DIO_voidSetPinValue+0x1c6>
 3c8:	53 c0       	rjmp	.+166    	; 0x470 <DIO_voidSetPinValue+0x1ee>
		{
			case 0 : CLR_BIT(PORTA,copy_u8pin); break; 
 3ca:	ab e3       	ldi	r26, 0x3B	; 59
 3cc:	b0 e0       	ldi	r27, 0x00	; 0
 3ce:	eb e3       	ldi	r30, 0x3B	; 59
 3d0:	f0 e0       	ldi	r31, 0x00	; 0
 3d2:	80 81       	ld	r24, Z
 3d4:	48 2f       	mov	r20, r24
 3d6:	8a 81       	ldd	r24, Y+2	; 0x02
 3d8:	28 2f       	mov	r18, r24
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	02 2e       	mov	r0, r18
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <DIO_voidSetPinValue+0x166>
 3e4:	88 0f       	add	r24, r24
 3e6:	99 1f       	adc	r25, r25
 3e8:	0a 94       	dec	r0
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <DIO_voidSetPinValue+0x162>
 3ec:	80 95       	com	r24
 3ee:	84 23       	and	r24, r20
 3f0:	8c 93       	st	X, r24
 3f2:	3e c0       	rjmp	.+124    	; 0x470 <DIO_voidSetPinValue+0x1ee>
			case 1 : CLR_BIT(PORTB,copy_u8pin); break; 
 3f4:	a8 e3       	ldi	r26, 0x38	; 56
 3f6:	b0 e0       	ldi	r27, 0x00	; 0
 3f8:	e8 e3       	ldi	r30, 0x38	; 56
 3fa:	f0 e0       	ldi	r31, 0x00	; 0
 3fc:	80 81       	ld	r24, Z
 3fe:	48 2f       	mov	r20, r24
 400:	8a 81       	ldd	r24, Y+2	; 0x02
 402:	28 2f       	mov	r18, r24
 404:	30 e0       	ldi	r19, 0x00	; 0
 406:	81 e0       	ldi	r24, 0x01	; 1
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	02 2e       	mov	r0, r18
 40c:	02 c0       	rjmp	.+4      	; 0x412 <DIO_voidSetPinValue+0x190>
 40e:	88 0f       	add	r24, r24
 410:	99 1f       	adc	r25, r25
 412:	0a 94       	dec	r0
 414:	e2 f7       	brpl	.-8      	; 0x40e <DIO_voidSetPinValue+0x18c>
 416:	80 95       	com	r24
 418:	84 23       	and	r24, r20
 41a:	8c 93       	st	X, r24
 41c:	29 c0       	rjmp	.+82     	; 0x470 <DIO_voidSetPinValue+0x1ee>
			case 2 : CLR_BIT(PORTC,copy_u8pin); break; 
 41e:	a5 e3       	ldi	r26, 0x35	; 53
 420:	b0 e0       	ldi	r27, 0x00	; 0
 422:	e5 e3       	ldi	r30, 0x35	; 53
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	80 81       	ld	r24, Z
 428:	48 2f       	mov	r20, r24
 42a:	8a 81       	ldd	r24, Y+2	; 0x02
 42c:	28 2f       	mov	r18, r24
 42e:	30 e0       	ldi	r19, 0x00	; 0
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	02 2e       	mov	r0, r18
 436:	02 c0       	rjmp	.+4      	; 0x43c <DIO_voidSetPinValue+0x1ba>
 438:	88 0f       	add	r24, r24
 43a:	99 1f       	adc	r25, r25
 43c:	0a 94       	dec	r0
 43e:	e2 f7       	brpl	.-8      	; 0x438 <DIO_voidSetPinValue+0x1b6>
 440:	80 95       	com	r24
 442:	84 23       	and	r24, r20
 444:	8c 93       	st	X, r24
 446:	14 c0       	rjmp	.+40     	; 0x470 <DIO_voidSetPinValue+0x1ee>
			case 3 : CLR_BIT(PORTD,copy_u8pin); break; 
 448:	a2 e3       	ldi	r26, 0x32	; 50
 44a:	b0 e0       	ldi	r27, 0x00	; 0
 44c:	e2 e3       	ldi	r30, 0x32	; 50
 44e:	f0 e0       	ldi	r31, 0x00	; 0
 450:	80 81       	ld	r24, Z
 452:	48 2f       	mov	r20, r24
 454:	8a 81       	ldd	r24, Y+2	; 0x02
 456:	28 2f       	mov	r18, r24
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	81 e0       	ldi	r24, 0x01	; 1
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	02 2e       	mov	r0, r18
 460:	02 c0       	rjmp	.+4      	; 0x466 <DIO_voidSetPinValue+0x1e4>
 462:	88 0f       	add	r24, r24
 464:	99 1f       	adc	r25, r25
 466:	0a 94       	dec	r0
 468:	e2 f7       	brpl	.-8      	; 0x462 <DIO_voidSetPinValue+0x1e0>
 46a:	80 95       	com	r24
 46c:	84 23       	and	r24, r20
 46e:	8c 93       	st	X, r24
		}
	}
	
	
}
 470:	27 96       	adiw	r28, 0x07	; 7
 472:	0f b6       	in	r0, 0x3f	; 63
 474:	f8 94       	cli
 476:	de bf       	out	0x3e, r29	; 62
 478:	0f be       	out	0x3f, r0	; 63
 47a:	cd bf       	out	0x3d, r28	; 61
 47c:	cf 91       	pop	r28
 47e:	df 91       	pop	r29
 480:	08 95       	ret

00000482 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 copy_u8port, u8 copy_u8pin)
{
 482:	df 93       	push	r29
 484:	cf 93       	push	r28
 486:	00 d0       	rcall	.+0      	; 0x488 <DIO_u8GetPinValue+0x6>
 488:	00 d0       	rcall	.+0      	; 0x48a <DIO_u8GetPinValue+0x8>
 48a:	00 d0       	rcall	.+0      	; 0x48c <DIO_u8GetPinValue+0xa>
 48c:	cd b7       	in	r28, 0x3d	; 61
 48e:	de b7       	in	r29, 0x3e	; 62
 490:	89 83       	std	Y+1, r24	; 0x01
 492:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8port)
 494:	89 81       	ldd	r24, Y+1	; 0x01
 496:	28 2f       	mov	r18, r24
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	3d 83       	std	Y+5, r19	; 0x05
 49c:	2c 83       	std	Y+4, r18	; 0x04
 49e:	4c 81       	ldd	r20, Y+4	; 0x04
 4a0:	5d 81       	ldd	r21, Y+5	; 0x05
 4a2:	41 30       	cpi	r20, 0x01	; 1
 4a4:	51 05       	cpc	r21, r1
 4a6:	49 f1       	breq	.+82     	; 0x4fa <DIO_u8GetPinValue+0x78>
 4a8:	8c 81       	ldd	r24, Y+4	; 0x04
 4aa:	9d 81       	ldd	r25, Y+5	; 0x05
 4ac:	82 30       	cpi	r24, 0x02	; 2
 4ae:	91 05       	cpc	r25, r1
 4b0:	34 f4       	brge	.+12     	; 0x4be <DIO_u8GetPinValue+0x3c>
 4b2:	2c 81       	ldd	r18, Y+4	; 0x04
 4b4:	3d 81       	ldd	r19, Y+5	; 0x05
 4b6:	21 15       	cp	r18, r1
 4b8:	31 05       	cpc	r19, r1
 4ba:	61 f0       	breq	.+24     	; 0x4d4 <DIO_u8GetPinValue+0x52>
 4bc:	57 c0       	rjmp	.+174    	; 0x56c <DIO_u8GetPinValue+0xea>
 4be:	4c 81       	ldd	r20, Y+4	; 0x04
 4c0:	5d 81       	ldd	r21, Y+5	; 0x05
 4c2:	42 30       	cpi	r20, 0x02	; 2
 4c4:	51 05       	cpc	r21, r1
 4c6:	61 f1       	breq	.+88     	; 0x520 <DIO_u8GetPinValue+0x9e>
 4c8:	8c 81       	ldd	r24, Y+4	; 0x04
 4ca:	9d 81       	ldd	r25, Y+5	; 0x05
 4cc:	83 30       	cpi	r24, 0x03	; 3
 4ce:	91 05       	cpc	r25, r1
 4d0:	d1 f1       	breq	.+116    	; 0x546 <DIO_u8GetPinValue+0xc4>
 4d2:	4c c0       	rjmp	.+152    	; 0x56c <DIO_u8GetPinValue+0xea>
	{   
		case 0 : return GET_BIT(PINA,copy_u8pin); break; 
 4d4:	e9 e3       	ldi	r30, 0x39	; 57
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	80 81       	ld	r24, Z
 4da:	28 2f       	mov	r18, r24
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	8a 81       	ldd	r24, Y+2	; 0x02
 4e0:	88 2f       	mov	r24, r24
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	a9 01       	movw	r20, r18
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <DIO_u8GetPinValue+0x6a>
 4e8:	55 95       	asr	r21
 4ea:	47 95       	ror	r20
 4ec:	8a 95       	dec	r24
 4ee:	e2 f7       	brpl	.-8      	; 0x4e8 <DIO_u8GetPinValue+0x66>
 4f0:	ca 01       	movw	r24, r20
 4f2:	58 2f       	mov	r21, r24
 4f4:	51 70       	andi	r21, 0x01	; 1
 4f6:	5b 83       	std	Y+3, r21	; 0x03
 4f8:	3a c0       	rjmp	.+116    	; 0x56e <DIO_u8GetPinValue+0xec>
		case 1 : return GET_BIT(PINB,copy_u8pin); break; 
 4fa:	e6 e3       	ldi	r30, 0x36	; 54
 4fc:	f0 e0       	ldi	r31, 0x00	; 0
 4fe:	80 81       	ld	r24, Z
 500:	28 2f       	mov	r18, r24
 502:	30 e0       	ldi	r19, 0x00	; 0
 504:	8a 81       	ldd	r24, Y+2	; 0x02
 506:	88 2f       	mov	r24, r24
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	a9 01       	movw	r20, r18
 50c:	02 c0       	rjmp	.+4      	; 0x512 <DIO_u8GetPinValue+0x90>
 50e:	55 95       	asr	r21
 510:	47 95       	ror	r20
 512:	8a 95       	dec	r24
 514:	e2 f7       	brpl	.-8      	; 0x50e <DIO_u8GetPinValue+0x8c>
 516:	ca 01       	movw	r24, r20
 518:	58 2f       	mov	r21, r24
 51a:	51 70       	andi	r21, 0x01	; 1
 51c:	5b 83       	std	Y+3, r21	; 0x03
 51e:	27 c0       	rjmp	.+78     	; 0x56e <DIO_u8GetPinValue+0xec>
		case 2 : return GET_BIT(PINC,copy_u8pin); break; 
 520:	e3 e3       	ldi	r30, 0x33	; 51
 522:	f0 e0       	ldi	r31, 0x00	; 0
 524:	80 81       	ld	r24, Z
 526:	28 2f       	mov	r18, r24
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	8a 81       	ldd	r24, Y+2	; 0x02
 52c:	88 2f       	mov	r24, r24
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	a9 01       	movw	r20, r18
 532:	02 c0       	rjmp	.+4      	; 0x538 <DIO_u8GetPinValue+0xb6>
 534:	55 95       	asr	r21
 536:	47 95       	ror	r20
 538:	8a 95       	dec	r24
 53a:	e2 f7       	brpl	.-8      	; 0x534 <DIO_u8GetPinValue+0xb2>
 53c:	ca 01       	movw	r24, r20
 53e:	58 2f       	mov	r21, r24
 540:	51 70       	andi	r21, 0x01	; 1
 542:	5b 83       	std	Y+3, r21	; 0x03
 544:	14 c0       	rjmp	.+40     	; 0x56e <DIO_u8GetPinValue+0xec>
		case 3 : return GET_BIT(PIND,copy_u8pin); break; 
 546:	e0 e3       	ldi	r30, 0x30	; 48
 548:	f0 e0       	ldi	r31, 0x00	; 0
 54a:	80 81       	ld	r24, Z
 54c:	28 2f       	mov	r18, r24
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	8a 81       	ldd	r24, Y+2	; 0x02
 552:	88 2f       	mov	r24, r24
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	a9 01       	movw	r20, r18
 558:	02 c0       	rjmp	.+4      	; 0x55e <DIO_u8GetPinValue+0xdc>
 55a:	55 95       	asr	r21
 55c:	47 95       	ror	r20
 55e:	8a 95       	dec	r24
 560:	e2 f7       	brpl	.-8      	; 0x55a <DIO_u8GetPinValue+0xd8>
 562:	ca 01       	movw	r24, r20
 564:	58 2f       	mov	r21, r24
 566:	51 70       	andi	r21, 0x01	; 1
 568:	5b 83       	std	Y+3, r21	; 0x03
 56a:	01 c0       	rjmp	.+2      	; 0x56e <DIO_u8GetPinValue+0xec>
 56c:	02 c0       	rjmp	.+4      	; 0x572 <DIO_u8GetPinValue+0xf0>
	}

}
 56e:	8b 81       	ldd	r24, Y+3	; 0x03
 570:	8e 83       	std	Y+6, r24	; 0x06
 572:	8e 81       	ldd	r24, Y+6	; 0x06
 574:	26 96       	adiw	r28, 0x06	; 6
 576:	0f b6       	in	r0, 0x3f	; 63
 578:	f8 94       	cli
 57a:	de bf       	out	0x3e, r29	; 62
 57c:	0f be       	out	0x3f, r0	; 63
 57e:	cd bf       	out	0x3d, r28	; 61
 580:	cf 91       	pop	r28
 582:	df 91       	pop	r29
 584:	08 95       	ret

00000586 <DIO_voidSetPortDirection>:

void DIO_voidSetPortDirection(u8 copy_u8port, u8 copy_u8Direction) 
{
 586:	df 93       	push	r29
 588:	cf 93       	push	r28
 58a:	00 d0       	rcall	.+0      	; 0x58c <DIO_voidSetPortDirection+0x6>
 58c:	00 d0       	rcall	.+0      	; 0x58e <DIO_voidSetPortDirection+0x8>
 58e:	cd b7       	in	r28, 0x3d	; 61
 590:	de b7       	in	r29, 0x3e	; 62
 592:	89 83       	std	Y+1, r24	; 0x01
 594:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8port)
 596:	89 81       	ldd	r24, Y+1	; 0x01
 598:	28 2f       	mov	r18, r24
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	3c 83       	std	Y+4, r19	; 0x04
 59e:	2b 83       	std	Y+3, r18	; 0x03
 5a0:	8b 81       	ldd	r24, Y+3	; 0x03
 5a2:	9c 81       	ldd	r25, Y+4	; 0x04
 5a4:	81 30       	cpi	r24, 0x01	; 1
 5a6:	91 05       	cpc	r25, r1
 5a8:	d1 f0       	breq	.+52     	; 0x5de <DIO_voidSetPortDirection+0x58>
 5aa:	2b 81       	ldd	r18, Y+3	; 0x03
 5ac:	3c 81       	ldd	r19, Y+4	; 0x04
 5ae:	22 30       	cpi	r18, 0x02	; 2
 5b0:	31 05       	cpc	r19, r1
 5b2:	2c f4       	brge	.+10     	; 0x5be <DIO_voidSetPortDirection+0x38>
 5b4:	8b 81       	ldd	r24, Y+3	; 0x03
 5b6:	9c 81       	ldd	r25, Y+4	; 0x04
 5b8:	00 97       	sbiw	r24, 0x00	; 0
 5ba:	61 f0       	breq	.+24     	; 0x5d4 <DIO_voidSetPortDirection+0x4e>
 5bc:	1e c0       	rjmp	.+60     	; 0x5fa <DIO_voidSetPortDirection+0x74>
 5be:	2b 81       	ldd	r18, Y+3	; 0x03
 5c0:	3c 81       	ldd	r19, Y+4	; 0x04
 5c2:	22 30       	cpi	r18, 0x02	; 2
 5c4:	31 05       	cpc	r19, r1
 5c6:	81 f0       	breq	.+32     	; 0x5e8 <DIO_voidSetPortDirection+0x62>
 5c8:	8b 81       	ldd	r24, Y+3	; 0x03
 5ca:	9c 81       	ldd	r25, Y+4	; 0x04
 5cc:	83 30       	cpi	r24, 0x03	; 3
 5ce:	91 05       	cpc	r25, r1
 5d0:	81 f0       	breq	.+32     	; 0x5f2 <DIO_voidSetPortDirection+0x6c>
 5d2:	13 c0       	rjmp	.+38     	; 0x5fa <DIO_voidSetPortDirection+0x74>
	{
		case 0 : DDRA = copy_u8Direction; break;
 5d4:	ea e3       	ldi	r30, 0x3A	; 58
 5d6:	f0 e0       	ldi	r31, 0x00	; 0
 5d8:	8a 81       	ldd	r24, Y+2	; 0x02
 5da:	80 83       	st	Z, r24
 5dc:	0e c0       	rjmp	.+28     	; 0x5fa <DIO_voidSetPortDirection+0x74>
		case 1 : DDRB = copy_u8Direction; break;
 5de:	e7 e3       	ldi	r30, 0x37	; 55
 5e0:	f0 e0       	ldi	r31, 0x00	; 0
 5e2:	8a 81       	ldd	r24, Y+2	; 0x02
 5e4:	80 83       	st	Z, r24
 5e6:	09 c0       	rjmp	.+18     	; 0x5fa <DIO_voidSetPortDirection+0x74>
		case 2 : DDRC = copy_u8Direction; break;
 5e8:	e4 e3       	ldi	r30, 0x34	; 52
 5ea:	f0 e0       	ldi	r31, 0x00	; 0
 5ec:	8a 81       	ldd	r24, Y+2	; 0x02
 5ee:	80 83       	st	Z, r24
 5f0:	04 c0       	rjmp	.+8      	; 0x5fa <DIO_voidSetPortDirection+0x74>
		case 3 : DDRD = copy_u8Direction; break;
 5f2:	e1 e3       	ldi	r30, 0x31	; 49
 5f4:	f0 e0       	ldi	r31, 0x00	; 0
 5f6:	8a 81       	ldd	r24, Y+2	; 0x02
 5f8:	80 83       	st	Z, r24
	}
	
}
 5fa:	0f 90       	pop	r0
 5fc:	0f 90       	pop	r0
 5fe:	0f 90       	pop	r0
 600:	0f 90       	pop	r0
 602:	cf 91       	pop	r28
 604:	df 91       	pop	r29
 606:	08 95       	ret

00000608 <DIO_voidSetPortValue>:

void DIO_voidSetPortValue(u8 copy_u8port, u8 copy_u8Value)
{
 608:	df 93       	push	r29
 60a:	cf 93       	push	r28
 60c:	00 d0       	rcall	.+0      	; 0x60e <DIO_voidSetPortValue+0x6>
 60e:	00 d0       	rcall	.+0      	; 0x610 <DIO_voidSetPortValue+0x8>
 610:	cd b7       	in	r28, 0x3d	; 61
 612:	de b7       	in	r29, 0x3e	; 62
 614:	89 83       	std	Y+1, r24	; 0x01
 616:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8port)
 618:	89 81       	ldd	r24, Y+1	; 0x01
 61a:	28 2f       	mov	r18, r24
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	3c 83       	std	Y+4, r19	; 0x04
 620:	2b 83       	std	Y+3, r18	; 0x03
 622:	8b 81       	ldd	r24, Y+3	; 0x03
 624:	9c 81       	ldd	r25, Y+4	; 0x04
 626:	81 30       	cpi	r24, 0x01	; 1
 628:	91 05       	cpc	r25, r1
 62a:	d1 f0       	breq	.+52     	; 0x660 <DIO_voidSetPortValue+0x58>
 62c:	2b 81       	ldd	r18, Y+3	; 0x03
 62e:	3c 81       	ldd	r19, Y+4	; 0x04
 630:	22 30       	cpi	r18, 0x02	; 2
 632:	31 05       	cpc	r19, r1
 634:	2c f4       	brge	.+10     	; 0x640 <DIO_voidSetPortValue+0x38>
 636:	8b 81       	ldd	r24, Y+3	; 0x03
 638:	9c 81       	ldd	r25, Y+4	; 0x04
 63a:	00 97       	sbiw	r24, 0x00	; 0
 63c:	61 f0       	breq	.+24     	; 0x656 <DIO_voidSetPortValue+0x4e>
 63e:	1e c0       	rjmp	.+60     	; 0x67c <DIO_voidSetPortValue+0x74>
 640:	2b 81       	ldd	r18, Y+3	; 0x03
 642:	3c 81       	ldd	r19, Y+4	; 0x04
 644:	22 30       	cpi	r18, 0x02	; 2
 646:	31 05       	cpc	r19, r1
 648:	81 f0       	breq	.+32     	; 0x66a <DIO_voidSetPortValue+0x62>
 64a:	8b 81       	ldd	r24, Y+3	; 0x03
 64c:	9c 81       	ldd	r25, Y+4	; 0x04
 64e:	83 30       	cpi	r24, 0x03	; 3
 650:	91 05       	cpc	r25, r1
 652:	81 f0       	breq	.+32     	; 0x674 <DIO_voidSetPortValue+0x6c>
 654:	13 c0       	rjmp	.+38     	; 0x67c <DIO_voidSetPortValue+0x74>
	{
		case 0 : PORTA = copy_u8Value; break;
 656:	eb e3       	ldi	r30, 0x3B	; 59
 658:	f0 e0       	ldi	r31, 0x00	; 0
 65a:	8a 81       	ldd	r24, Y+2	; 0x02
 65c:	80 83       	st	Z, r24
 65e:	0e c0       	rjmp	.+28     	; 0x67c <DIO_voidSetPortValue+0x74>
		case 1 : PORTB = copy_u8Value; break;
 660:	e8 e3       	ldi	r30, 0x38	; 56
 662:	f0 e0       	ldi	r31, 0x00	; 0
 664:	8a 81       	ldd	r24, Y+2	; 0x02
 666:	80 83       	st	Z, r24
 668:	09 c0       	rjmp	.+18     	; 0x67c <DIO_voidSetPortValue+0x74>
		case 2 : PORTC = copy_u8Value; break;
 66a:	e5 e3       	ldi	r30, 0x35	; 53
 66c:	f0 e0       	ldi	r31, 0x00	; 0
 66e:	8a 81       	ldd	r24, Y+2	; 0x02
 670:	80 83       	st	Z, r24
 672:	04 c0       	rjmp	.+8      	; 0x67c <DIO_voidSetPortValue+0x74>
		case 3 : PORTD = copy_u8Value; break;
 674:	e2 e3       	ldi	r30, 0x32	; 50
 676:	f0 e0       	ldi	r31, 0x00	; 0
 678:	8a 81       	ldd	r24, Y+2	; 0x02
 67a:	80 83       	st	Z, r24
	}
}
 67c:	0f 90       	pop	r0
 67e:	0f 90       	pop	r0
 680:	0f 90       	pop	r0
 682:	0f 90       	pop	r0
 684:	cf 91       	pop	r28
 686:	df 91       	pop	r29
 688:	08 95       	ret

0000068a <DIO_voidTogglePinValue>:

void DIO_voidTogglePinValue(u8 copy_u8port,u8 copy_u8Pin)
{
 68a:	df 93       	push	r29
 68c:	cf 93       	push	r28
 68e:	00 d0       	rcall	.+0      	; 0x690 <DIO_voidTogglePinValue+0x6>
 690:	00 d0       	rcall	.+0      	; 0x692 <DIO_voidTogglePinValue+0x8>
 692:	cd b7       	in	r28, 0x3d	; 61
 694:	de b7       	in	r29, 0x3e	; 62
 696:	89 83       	std	Y+1, r24	; 0x01
 698:	6a 83       	std	Y+2, r22	; 0x02
	
	switch(copy_u8port)
 69a:	89 81       	ldd	r24, Y+1	; 0x01
 69c:	28 2f       	mov	r18, r24
 69e:	30 e0       	ldi	r19, 0x00	; 0
 6a0:	3c 83       	std	Y+4, r19	; 0x04
 6a2:	2b 83       	std	Y+3, r18	; 0x03
 6a4:	8b 81       	ldd	r24, Y+3	; 0x03
 6a6:	9c 81       	ldd	r25, Y+4	; 0x04
 6a8:	81 30       	cpi	r24, 0x01	; 1
 6aa:	91 05       	cpc	r25, r1
 6ac:	49 f1       	breq	.+82     	; 0x700 <DIO_voidTogglePinValue+0x76>
 6ae:	2b 81       	ldd	r18, Y+3	; 0x03
 6b0:	3c 81       	ldd	r19, Y+4	; 0x04
 6b2:	22 30       	cpi	r18, 0x02	; 2
 6b4:	31 05       	cpc	r19, r1
 6b6:	2c f4       	brge	.+10     	; 0x6c2 <DIO_voidTogglePinValue+0x38>
 6b8:	8b 81       	ldd	r24, Y+3	; 0x03
 6ba:	9c 81       	ldd	r25, Y+4	; 0x04
 6bc:	00 97       	sbiw	r24, 0x00	; 0
 6be:	61 f0       	breq	.+24     	; 0x6d8 <DIO_voidTogglePinValue+0x4e>
 6c0:	5a c0       	rjmp	.+180    	; 0x776 <DIO_voidTogglePinValue+0xec>
 6c2:	2b 81       	ldd	r18, Y+3	; 0x03
 6c4:	3c 81       	ldd	r19, Y+4	; 0x04
 6c6:	22 30       	cpi	r18, 0x02	; 2
 6c8:	31 05       	cpc	r19, r1
 6ca:	71 f1       	breq	.+92     	; 0x728 <DIO_voidTogglePinValue+0x9e>
 6cc:	8b 81       	ldd	r24, Y+3	; 0x03
 6ce:	9c 81       	ldd	r25, Y+4	; 0x04
 6d0:	83 30       	cpi	r24, 0x03	; 3
 6d2:	91 05       	cpc	r25, r1
 6d4:	e9 f1       	breq	.+122    	; 0x750 <DIO_voidTogglePinValue+0xc6>
 6d6:	4f c0       	rjmp	.+158    	; 0x776 <DIO_voidTogglePinValue+0xec>
	{   
		case 0 :  TOG_BIT(PORTA,copy_u8Pin); break;
 6d8:	ab e3       	ldi	r26, 0x3B	; 59
 6da:	b0 e0       	ldi	r27, 0x00	; 0
 6dc:	eb e3       	ldi	r30, 0x3B	; 59
 6de:	f0 e0       	ldi	r31, 0x00	; 0
 6e0:	80 81       	ld	r24, Z
 6e2:	48 2f       	mov	r20, r24
 6e4:	8a 81       	ldd	r24, Y+2	; 0x02
 6e6:	28 2f       	mov	r18, r24
 6e8:	30 e0       	ldi	r19, 0x00	; 0
 6ea:	81 e0       	ldi	r24, 0x01	; 1
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	02 2e       	mov	r0, r18
 6f0:	02 c0       	rjmp	.+4      	; 0x6f6 <DIO_voidTogglePinValue+0x6c>
 6f2:	88 0f       	add	r24, r24
 6f4:	99 1f       	adc	r25, r25
 6f6:	0a 94       	dec	r0
 6f8:	e2 f7       	brpl	.-8      	; 0x6f2 <DIO_voidTogglePinValue+0x68>
 6fa:	84 27       	eor	r24, r20
 6fc:	8c 93       	st	X, r24
 6fe:	3b c0       	rjmp	.+118    	; 0x776 <DIO_voidTogglePinValue+0xec>
		case 1 :  TOG_BIT(PORTB,copy_u8Pin); break;
 700:	a8 e3       	ldi	r26, 0x38	; 56
 702:	b0 e0       	ldi	r27, 0x00	; 0
 704:	e8 e3       	ldi	r30, 0x38	; 56
 706:	f0 e0       	ldi	r31, 0x00	; 0
 708:	80 81       	ld	r24, Z
 70a:	48 2f       	mov	r20, r24
 70c:	8a 81       	ldd	r24, Y+2	; 0x02
 70e:	28 2f       	mov	r18, r24
 710:	30 e0       	ldi	r19, 0x00	; 0
 712:	81 e0       	ldi	r24, 0x01	; 1
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	02 2e       	mov	r0, r18
 718:	02 c0       	rjmp	.+4      	; 0x71e <DIO_voidTogglePinValue+0x94>
 71a:	88 0f       	add	r24, r24
 71c:	99 1f       	adc	r25, r25
 71e:	0a 94       	dec	r0
 720:	e2 f7       	brpl	.-8      	; 0x71a <DIO_voidTogglePinValue+0x90>
 722:	84 27       	eor	r24, r20
 724:	8c 93       	st	X, r24
 726:	27 c0       	rjmp	.+78     	; 0x776 <DIO_voidTogglePinValue+0xec>
		case 2 :  TOG_BIT(PORTC,copy_u8Pin); break;
 728:	a5 e3       	ldi	r26, 0x35	; 53
 72a:	b0 e0       	ldi	r27, 0x00	; 0
 72c:	e5 e3       	ldi	r30, 0x35	; 53
 72e:	f0 e0       	ldi	r31, 0x00	; 0
 730:	80 81       	ld	r24, Z
 732:	48 2f       	mov	r20, r24
 734:	8a 81       	ldd	r24, Y+2	; 0x02
 736:	28 2f       	mov	r18, r24
 738:	30 e0       	ldi	r19, 0x00	; 0
 73a:	81 e0       	ldi	r24, 0x01	; 1
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	02 2e       	mov	r0, r18
 740:	02 c0       	rjmp	.+4      	; 0x746 <DIO_voidTogglePinValue+0xbc>
 742:	88 0f       	add	r24, r24
 744:	99 1f       	adc	r25, r25
 746:	0a 94       	dec	r0
 748:	e2 f7       	brpl	.-8      	; 0x742 <DIO_voidTogglePinValue+0xb8>
 74a:	84 27       	eor	r24, r20
 74c:	8c 93       	st	X, r24
 74e:	13 c0       	rjmp	.+38     	; 0x776 <DIO_voidTogglePinValue+0xec>
		case 3 :  TOG_BIT(PORTD,copy_u8Pin); break;
 750:	a2 e3       	ldi	r26, 0x32	; 50
 752:	b0 e0       	ldi	r27, 0x00	; 0
 754:	e2 e3       	ldi	r30, 0x32	; 50
 756:	f0 e0       	ldi	r31, 0x00	; 0
 758:	80 81       	ld	r24, Z
 75a:	48 2f       	mov	r20, r24
 75c:	8a 81       	ldd	r24, Y+2	; 0x02
 75e:	28 2f       	mov	r18, r24
 760:	30 e0       	ldi	r19, 0x00	; 0
 762:	81 e0       	ldi	r24, 0x01	; 1
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	02 2e       	mov	r0, r18
 768:	02 c0       	rjmp	.+4      	; 0x76e <DIO_voidTogglePinValue+0xe4>
 76a:	88 0f       	add	r24, r24
 76c:	99 1f       	adc	r25, r25
 76e:	0a 94       	dec	r0
 770:	e2 f7       	brpl	.-8      	; 0x76a <DIO_voidTogglePinValue+0xe0>
 772:	84 27       	eor	r24, r20
 774:	8c 93       	st	X, r24
	}
}
 776:	0f 90       	pop	r0
 778:	0f 90       	pop	r0
 77a:	0f 90       	pop	r0
 77c:	0f 90       	pop	r0
 77e:	cf 91       	pop	r28
 780:	df 91       	pop	r29
 782:	08 95       	ret

00000784 <DELAY_us>:

*/


void DELAY_us(uint16_t us_count)
 {
 784:	df 93       	push	r29
 786:	cf 93       	push	r28
 788:	00 d0       	rcall	.+0      	; 0x78a <DELAY_us+0x6>
 78a:	cd b7       	in	r28, 0x3d	; 61
 78c:	de b7       	in	r29, 0x3e	; 62
 78e:	9a 83       	std	Y+2, r25	; 0x02
 790:	89 83       	std	Y+1, r24	; 0x01
 792:	05 c0       	rjmp	.+10     	; 0x79e <DELAY_us+0x1a>
    while(us_count!=0)
      {
		 us_count--;
 794:	89 81       	ldd	r24, Y+1	; 0x01
 796:	9a 81       	ldd	r25, Y+2	; 0x02
 798:	01 97       	sbiw	r24, 0x01	; 1
 79a:	9a 83       	std	Y+2, r25	; 0x02
 79c:	89 83       	std	Y+1, r24	; 0x01
*/


void DELAY_us(uint16_t us_count)
 {
    while(us_count!=0)
 79e:	89 81       	ldd	r24, Y+1	; 0x01
 7a0:	9a 81       	ldd	r25, Y+2	; 0x02
 7a2:	00 97       	sbiw	r24, 0x00	; 0
 7a4:	b9 f7       	brne	.-18     	; 0x794 <DELAY_us+0x10>
      {
		 us_count--;
	   }
  }
 7a6:	0f 90       	pop	r0
 7a8:	0f 90       	pop	r0
 7aa:	cf 91       	pop	r28
 7ac:	df 91       	pop	r29
 7ae:	08 95       	ret

000007b0 <DELAY_ms>:




void DELAY_ms(uint16_t ms_count)
 {
 7b0:	df 93       	push	r29
 7b2:	cf 93       	push	r28
 7b4:	00 d0       	rcall	.+0      	; 0x7b6 <DELAY_ms+0x6>
 7b6:	cd b7       	in	r28, 0x3d	; 61
 7b8:	de b7       	in	r29, 0x3e	; 62
 7ba:	9a 83       	std	Y+2, r25	; 0x02
 7bc:	89 83       	std	Y+1, r24	; 0x01
 7be:	09 c0       	rjmp	.+18     	; 0x7d2 <DELAY_ms+0x22>
        while(ms_count!=0)
		 {
	        DELAY_us(1000);	 //DELAY_us is called to generate 1ms delay
 7c0:	88 ee       	ldi	r24, 0xE8	; 232
 7c2:	93 e0       	ldi	r25, 0x03	; 3
 7c4:	0e 94 c2 03 	call	0x784	; 0x784 <DELAY_us>
			 ms_count--;
 7c8:	89 81       	ldd	r24, Y+1	; 0x01
 7ca:	9a 81       	ldd	r25, Y+2	; 0x02
 7cc:	01 97       	sbiw	r24, 0x01	; 1
 7ce:	9a 83       	std	Y+2, r25	; 0x02
 7d0:	89 83       	std	Y+1, r24	; 0x01



void DELAY_ms(uint16_t ms_count)
 {
        while(ms_count!=0)
 7d2:	89 81       	ldd	r24, Y+1	; 0x01
 7d4:	9a 81       	ldd	r25, Y+2	; 0x02
 7d6:	00 97       	sbiw	r24, 0x00	; 0
 7d8:	99 f7       	brne	.-26     	; 0x7c0 <DELAY_ms+0x10>
		 {
	        DELAY_us(1000);	 //DELAY_us is called to generate 1ms delay
			 ms_count--;
			}

   }
 7da:	0f 90       	pop	r0
 7dc:	0f 90       	pop	r0
 7de:	cf 91       	pop	r28
 7e0:	df 91       	pop	r29
 7e2:	08 95       	ret

000007e4 <DELAY_sec>:


*/

void DELAY_sec(uint16_t sec_count)
 {
 7e4:	df 93       	push	r29
 7e6:	cf 93       	push	r28
 7e8:	00 d0       	rcall	.+0      	; 0x7ea <DELAY_sec+0x6>
 7ea:	cd b7       	in	r28, 0x3d	; 61
 7ec:	de b7       	in	r29, 0x3e	; 62
 7ee:	9a 83       	std	Y+2, r25	; 0x02
 7f0:	89 83       	std	Y+1, r24	; 0x01
 7f2:	09 c0       	rjmp	.+18     	; 0x806 <DELAY_sec+0x22>


	 while(sec_count!=0)
	  {
	     DELAY_ms(1000);	//DELAY_ms is called to generate 1 sec delay
 7f4:	88 ee       	ldi	r24, 0xE8	; 232
 7f6:	93 e0       	ldi	r25, 0x03	; 3
 7f8:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <DELAY_ms>
		 sec_count--;
 7fc:	89 81       	ldd	r24, Y+1	; 0x01
 7fe:	9a 81       	ldd	r25, Y+2	; 0x02
 800:	01 97       	sbiw	r24, 0x01	; 1
 802:	9a 83       	std	Y+2, r25	; 0x02
 804:	89 83       	std	Y+1, r24	; 0x01

void DELAY_sec(uint16_t sec_count)
 {


	 while(sec_count!=0)
 806:	89 81       	ldd	r24, Y+1	; 0x01
 808:	9a 81       	ldd	r25, Y+2	; 0x02
 80a:	00 97       	sbiw	r24, 0x00	; 0
 80c:	99 f7       	brne	.-26     	; 0x7f4 <DELAY_sec+0x10>
	  {
	     DELAY_ms(1000);	//DELAY_ms is called to generate 1 sec delay
		 sec_count--;
		}
  }
 80e:	0f 90       	pop	r0
 810:	0f 90       	pop	r0
 812:	cf 91       	pop	r28
 814:	df 91       	pop	r29
 816:	08 95       	ret

00000818 <SSD_voidDisplayNumber>:


u8 Numbers[10] = {ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};

void SSD_voidDisplayNumber(u8 copy_u8Num)
{
 818:	df 93       	push	r29
 81a:	cf 93       	push	r28
 81c:	0f 92       	push	r0
 81e:	cd b7       	in	r28, 0x3d	; 61
 820:	de b7       	in	r29, 0x3e	; 62
 822:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortDirection(SSD_PORT ,0xff);
 824:	82 e0       	ldi	r24, 0x02	; 2
 826:	6f ef       	ldi	r22, 0xFF	; 255
 828:	0e 94 c3 02 	call	0x586	; 0x586 <DIO_voidSetPortDirection>
	DIO_voidSetPortValue(SSD_PORT ,Numbers[copy_u8Num]);
 82c:	89 81       	ldd	r24, Y+1	; 0x01
 82e:	88 2f       	mov	r24, r24
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	fc 01       	movw	r30, r24
 834:	e0 5a       	subi	r30, 0xA0	; 160
 836:	ff 4f       	sbci	r31, 0xFF	; 255
 838:	90 81       	ld	r25, Z
 83a:	82 e0       	ldi	r24, 0x02	; 2
 83c:	69 2f       	mov	r22, r25
 83e:	0e 94 04 03 	call	0x608	; 0x608 <DIO_voidSetPortValue>
}
 842:	0f 90       	pop	r0
 844:	cf 91       	pop	r28
 846:	df 91       	pop	r29
 848:	08 95       	ret

0000084a <main>:

int main()
{
 84a:	df 93       	push	r29
 84c:	cf 93       	push	r28
 84e:	0f 92       	push	r0
 850:	cd b7       	in	r28, 0x3d	; 61
 852:	de b7       	in	r29, 0x3e	; 62
//	{
//		SSD_voidDisplayNumber(i);
//		DELAY_ms(100);
//	}

	for(i =9; i>=0;i--)
 854:	89 e0       	ldi	r24, 0x09	; 9
 856:	89 83       	std	Y+1, r24	; 0x01
		{
			SSD_voidDisplayNumber(i);
 858:	89 81       	ldd	r24, Y+1	; 0x01
 85a:	0e 94 0c 04 	call	0x818	; 0x818 <SSD_voidDisplayNumber>
			DELAY_ms(100);
 85e:	84 e6       	ldi	r24, 0x64	; 100
 860:	90 e0       	ldi	r25, 0x00	; 0
 862:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <DELAY_ms>
//	{
//		SSD_voidDisplayNumber(i);
//		DELAY_ms(100);
//	}

	for(i =9; i>=0;i--)
 866:	89 81       	ldd	r24, Y+1	; 0x01
 868:	81 50       	subi	r24, 0x01	; 1
 86a:	89 83       	std	Y+1, r24	; 0x01
 86c:	f5 cf       	rjmp	.-22     	; 0x858 <main+0xe>

0000086e <_exit>:
 86e:	f8 94       	cli

00000870 <__stop_program>:
 870:	ff cf       	rjmp	.-2      	; 0x870 <__stop_program>
